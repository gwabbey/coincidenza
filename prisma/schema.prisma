// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subscription {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deviceId String
  
  endpoint String
  p256dh   String
  auth     String
  
  deviceType String?
  platform   String?
  userAgent  String?
  
  isActive   Boolean  @default(true)
  lastSent   DateTime?
  failCount  Int      @default(0)
  
  tripAlerts    TripAlert[]
  
  @@unique([endpoint, deviceId])
  @@index([deviceId])
  @@index([isActive])
}

model TripAlert {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  subscriptionId String
  
  ids    Json      @default("{}") // { "rfi": "22476", "viaggiatreno": "12345-2024-06-30", "deutschebahn": "ICE123" }
  operators       String[]   // ["Trenitalia", "OEBB", "Trenord"]
  type       TripType
  tripStartTime      DateTime
  
  departureStationId String
  arrivalStationId   String
  departureTime      DateTime
  arrivalTime      DateTime
  daysOfWeek String[] @default([]) // ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
  
  isActive           Boolean   @default(true)
  
  @@index([departureStationId])
  @@index([arrivalStationId])
  @@index([subscriptionId])
}

enum TripType {
  TRAIN
  BUS
}